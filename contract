// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";

contract Token is ERC20 {
    address public Claimer;
    bool public active;

    modifier onlyClaimer() {
        require(msg.sender == Claimer, "Only the claimer can call this function");
        _;
    }

    constructor() ERC20(" VIP Token", "VP") {
        Claimer = msg.sender;
        _mint(Claimer, 0);
        active = true;
    }

    function MintTokens(address claimant, uint256 weigh) external onlyClaimer {
        _mint(claimant, weigh);
    }

    function burnTokens(uint256 weigh) external {
        _burn(msg.sender, weigh);
    }

    function transferTokens(address claimant, uint256 weigh) external {
        _transfer(msg.sender, claimant, weigh);
    }
}
